name: Deploy

on: 
  workflow_dispatch:
    inputs:
      release_tag_name_input:
        description: "Release Tag Name <X.X.X>"
        required: true
  release:
    types:
      - prereleased


jobs:
  setup:
    runs-on: ubuntu-latest
    outputs:
      package_version: ${{ steps.create_tags.outputs.package_version }}
      tag_version: ${{ steps.create_tags.outputs.tag_version }}
    steps:
      - name: Checkout Repo
        uses: actions/checkout@v2

      - name: Create Deploy version vars
        id: create_tags
        run: |
          if [[ "${{ github.event_name }}" -eq "release" ]]; then
            case "${RELEASE_TAG_NAME_INPUT:0:1}" in
              v)
                echo "RELEASE_NAME=${RELEASE_TAG_NAME_INPUT:1}" >> $GITHUB_ENV
                echo "RELEASE_TAG_NAME=$RELEASE_TAG_NAME_INPUT" >> $GITHUB_ENV
                echo "::set-output name=package_version::${RELEASE_TAG_NAME_INPUT:1}"
                echo "::set-output name=tag_version::$RELEASE_TAG_NAME_INPUT"
                ;;
              [0-9])
                echo "RELEASE_NAME=$RELEASE_TAG_NAME_INPUT" >> $GITHUB_ENV
                echo "RELEASE_TAG_NAME=v$RELEASE_TAG_NAME_INPUT" >> $GITHUB_ENV
                echo "::set-output name=package_version::$RELEASE_TAG_NAME_INPUT"
                echo "::set-output name=tag_version::v$RELEASE_TAG_NAME_INPUT"
                ;;
              *)
                exit 1
                ;;
            esac
          else
            TAG_VERSION=$(echo ${{ github.ref }} | cut -d "/" -f 3)
            PKG_VERSION=${TAG_VERSION:1}

            echo "::set-output name=package_version::$PKG_VERSION"
            echo "::set-output name=tag_version::$TAG_VERSION"
          fi
        env:
          RELEASE_TAG_NAME_INPUT: ${{ github.event.inputs.release_tag_name_input }}


  snap:
    name: Deploy Snap
    runs-on: ubuntu-latest
    needs: setup
    env:
      PKG_VERSION: ${{ needs.setup.outputs.package_version }}
      TAG_VERSION: ${{ needs.setup.outputs.tag_version }}
    steps:
      - name: Checkout repo
        uses: actions/checkout@v2

      - name: Install Snapcraft
        uses: samuelmeuli/action-snapcraft@v1
        #with: 
        #  snapcraft_token: ${{ secrets.SNAP_TOKEN }}

      - name: Get snap release asset
        uses: dsaltares/fetch-gh-release-asset@0.0.5
        with:
          version: tags/${{ env.TAG_VERSION }}
          file: bw_${{ env.PKG_VERSION }}_amd64.snap
        env:
          PKG_VERSION: ${{ needs.setup.outputs.package_version }}
          TAG_VERSION: ${{ needs.setup.outputs.tag_version }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: move assets
        run: |
          echo "Hopefully this is temporary until release 0.0.6 of the fetch-gh-release-asset is released"
          mkdir dist
          mv bw_${{ env.PKG_VERSION }}_amd64.snap -t dist

      - name: test
        run: ls -alht dist

      #- name: Publish Snap & logout
      #  run: |
      #    snapcraft push ./dist/bw_${{ env.PACKAGE_VERSION }}_amd64.snap --release stable
      #    snapcraft logout


  choco:
    name: Deploy Choco
    runs-on: windows-latest
    needs: setup
    env:
      PKG_VERSION: ${{ needs.setup.outputs.package_version }}
      TAG_VERSION: ${{ needs.setup.outputs.tag_version }}
    steps:
      - name: Checkout repo
        uses: actions/checkout@v2

      - name: Setup Chocolatey
        if: false
        run: choco apikey --key $env:CHOCO_API_KEY --source https://push.chocolatey.org/
        env:
          CHOCO_API_KEY: ${{ secrets.CHOCO_API_KEY }}

      #- name: Get choco release asset
      #  uses: dsaltares/fetch-gh-release-asset@0.0.5
      #  with:
      #    version: tags/${{ env.TAG_VERSION }}
      #    file: bitwarden.${{ env.PKG_VERSION }}.nupkg
      #  env:
      #    PKG_VERSION: ${{ needs.setup.outputs.package_version }}
      #    TAG_VERSION: ${{ needs.setup.outputs.tag_version }}
      #    GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      
      - name: make dist dir 
        shell: pwsh
        run: New-Item -ItemType directory -Path ./dist

      - name: Test getting choco release asset - windows
        uses: Xotl/cool-github-releases@v1
        with:
          mode: download
          tag_name: ${{ env.TAG_VERSION }}
          assets: bitwarden-cli.${{ env.PKG_VERSION }}.nupkg|./dist/bitwarden-cli.${{ env.PKG_VERSION }}.nupkg
          github_token: ${{ secrets.GITHUB_TOKEN }}


      - name: Push to Chocolatey
        shell: pwsh
        run: |
          # In place of ./scripts/choco-update.ps1

          #New-Item -ItemType directory -Path ./dist
          #Move-Item -Path bitwarden-cli.${{ env.PKG_VERSION }}.nupkg -Destination ./dist/bitwarden-cli.${{ env.PKG_VERSION }}.nupkg
          cd dist
          #choco push

      - name: test
        run: ls dist


  npm:
    name: Publish NPM
    if: false
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repo
        uses: actions/checkout@v2

      - name: Setup NPM
        shell: pwsh
        run: |
          "//registry.npmjs.org/:_authToken=${env:NPM_TOKEN}" | Out-File ".npmrc" -Encoding UTF8
        env:
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}

      - name: Publish NPM
        run: npm run publish:npm
